#docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -it -v ~/dev/live/transcoder:/tmp   -p 6543:6543 kaltura/live-transcoder  
#gdb --args ./transcoder -f /tmp/config2.json

ARG  CUDA_VERSION="11.1.1-devel"

ARG PYTHON_VERSION=3.8

FROM nvidia/cuda:${CUDA_VERSION}
ENV TZ=Europe/Kiev
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
WORKDIR /build

RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub && apt-get update && apt-get install -y sudo git build-essential gdbserver vim yasm cmake libtool autogen dh-autoreconf libbz2-dev libc6 libc6-dev unzip wget libnuma1 libnuma-dev frei0r-plugins-dev libgnutls28-dev libass-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libopus-dev librtmp-dev libsoxr-dev libspeex-dev libtheora-dev libvo-amrwbenc-dev libvorbis-dev libvpx-dev libwebp-dev libx264-dev libx265-dev libxvidcore-dev gdb

ARG  FFMPEG_VERSION="n5.0"
ARG  NVIDIA_CODEC_HEADERS_VERSION="n9.0.18.4"
ARG PYTHON_VERSION

RUN git clone --branch ${NVIDIA_CODEC_HEADERS_VERSION} https://github.com/FFmpeg/nv-codec-headers.git
RUN cd nv-codec-headers && \
    make && \
    sudo make install

RUN git clone --branch ${FFMPEG_VERSION}  https://github.com/ffmpeg/ffmpeg.git


RUN  cd ffmpeg && \
       ./configure --disable-doc --enable-nonfree --disable-shared --enable-nvenc --enable-cuda --enable-cuvid --enable-libnpp --extra-cflags=-Ilocal/include --enable-gpl --enable-version3 --disable-debug --disable-ffplay --disable-indev=sndio --disable-outdev=sndio     --enable-libx264  --enable-libx265  --extra-cflags=-I/usr/local/cuda/include --extra-ldflags=-L/usr/local/cuda/lib64 && \
       make -j 8

RUN apt-get install valgrind -y

RUN apt-get update && apt-get install -y sudo python${PYTHON_VERSION} python3-pip && python3 -m pip install pip
RUN python${PYTHON_VERSION} -m pip install redis

COPY . .

#apply patch
RUN  cd ffmpeg && \
       for patch in `ls ../patches/*`; do git apply $patch; done && \
       make -j 8 && \
       make install

RUN make clean && make && make install
